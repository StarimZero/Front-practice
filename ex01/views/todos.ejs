<h1 style="background-color: white;"><%=title%></h1>
<div id="todos">데이터 없음.</div> <!-- 데이터를 넣을 방 -->
<!-- 할일 목록 템플릿(form이다.)핸들바로 만드는거임   테이블을 만들건데 반복할것 -> 모든것 (.)  td, td, td, -->
<script id = "temp" type="x-handlebars-template">
    <table class="table table-dark table-striped">
        {{#each .}} 
            <tr>
                <td>{{id}}</td>
                <td>{{title}}</td>
                <td>{{completed}}</td>
            </tr>
        {{/each}}
    </table>
</script>
<script>
    getList(); //함수호출  위아래 상관없다.
    function getList(){ // 함수정의
        fetch('https://jsonplaceholder.typicode.com/todos') //todos 데이터 가져오기.
        .then(response => response.json()) // 잘가져오면 response에 넣어준다. 그걸 json으로 바꿔준다.  => 결론적으로 json으로 저장
        .then(json => {
            console.log(json);
            const temp = Handlebars.compile($("#temp").html()); //아이뒤가 temp거를 html으로 컴파일해서(위에 템플릿은 html언어가아니니까) temp에 넣어주고
            $("#todos").html(temp(json)); // 템플릿으로 만든거를 todos에 넣어줌.
        //     let str = "";
        //     str += `<table class="table table-dark table-striped">`;
        //     $(json).each(function(){ //json을 반복해서 function 작업을 해주겠다.z
        //         const title = this.title; // 타이틀은 디스에있는 타이틀을 가져오고
        //         const id = this.id; //아이디는 다스에 있는 아이디를 가져온다.
        //         const completed = this.completed;
        //         str += `<tr>`;
        //         str += `<td>${id}</td><td>${title}</td><td>${completed}</td>`;
        //         str += `</tr>`;
        //     }); 
        //     str += `</table>`;
        //     $("#todos").html(str); //todos에 str을 넣어준다.
        }) // => json을 console에 찍어봐라 여기에 명령어를 적어야 하니 중괄호를 해준다.
    }
</script>